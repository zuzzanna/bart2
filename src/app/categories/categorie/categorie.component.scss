.title {
  & img {
    float: left;
    padding: 7px;
    padding-right: 15px;
  }

  & a:hover {
    text-decoration: none;
  }
}

h2 {
  cursor: pointer;
}


.header {
  -webkit-background-size: cover !important;
  -moz-background-size: cover !important;
  -o-background-size: cover !important;
  background-size: cover !important;
  filter: blur(8px);
  -webkit-filter: blur(8px);
}

@media(max-width: 1199px) {
  .add_category {
    min-height: 200px;
  }
}

.title img {
  float: left;
  padding: 7px;
  padding-right: 15px;
}

.title a:hover {
  text-decoration: none;
}

.header {
  background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("../../../assets/images/images/pexels-photo-261187.jpeg") repeat scroll 70% 60%;
  -webkit-background-size: cover !important;
  -moz-background-size: cover !important;
  -o-background-size: cover !important;
  background-size: cover !important;
  filter: blur(8px);
  -webkit-filter: blur(8px);
}


.zoom:hover .category img {
  transition: all .2s ease-in;
  height: 110px;
}

.add_category {
  height: 100%;
  cursor: pointer;

  & img {
    filter: invert(0.5);
    height: 50px;
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: auto;
    margin-bottom: 5px;
  }
}

.center {
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
}


.p-dialog {
  top: 30% !important;

  & button {
    color: white;
    padding-bottom: 10px;
    cursor: pointer;
    opacity: 1;
  }

  & h3 {
    text-transform: uppercase;
    font-size: revert;
    font-weight: bold;
  }
}

::ng-deep .p-dialog {
  top: 20%;
  box-shadow: none;
  background: none !important;
  width: 100% !important;
}

::ng-deep .p-dialog .p-dialog-content,
::ng-deep .p-dialog .p-dialog-header {
  background: none !important;
}

::ng-deep .modal-dialog {
  pointer-events: all;
}

.close_modal {
  float: right;
  background-color: transparent;
  color: white;
  appearance: none;
  padding: 5px;
  margin-bottom: 5px;
  border: none;

  & span {
    font-weight: 700;
  }
}

.close {
  img {
    height: 25px;
  }

  span {
    font-size: initial;
  }
}

.modal-footer {
  border-bottom: 1px solid #dee2e6;
  border-top: none;
  margin-bottom: 15px;
  padding-bottom: 5px;

  & img {
    margin: 5px;
  }
}

.modal-title {
  text-transform: uppercase;
  font-size: revert;
  font-weight: bold;
}

@media(max-width: 576px) {
  .add_category {
    height: 150px;
  }
}

form {
  width: 100%;
}

input[type=text] {
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: none;
  box-sizing: border-box;
  width: 75%;
  color: darkgray;
  text-transform: uppercase;
  font-size: revert;
  font-weight: bold;
}

form button {
  width: auto;
  background-color: #42c88d !important;
  color: white !important;
  padding: 8px 10px;
  margin: 8px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

@media(max-width: 444px) {
  input[type=text] {
    width: 100%;
  }
  form button {
    width: 100%;
  }

}


.category {
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
  background: white;
}

@media (max-width: 1199px) {
  .add_category {
    min-height: 200px;
  }
}

.modal-content {
  padding: 15px 30px;
}

.modal-header, .modal-footer {
  border: none;
  padding: 10px 0px;
  margin: 0;
}

.modal-body {
  border: dashed darkgray;
  padding: 10px;
  color: darkgray;
  font-size: revert;
  font-weight: bold;
  text-align: center;
}

.modal-body h4, .modal-body p {
  margin-bottom: 5px;
}

.modal-body p {
  font-size: smaller;
}

.modal-body button {
  width: auto;
  color: darkgray;
  background-color: white;
  padding: 8px 18px;
  padding-bottom: 8px;
  margin-bottom: 25px;
  border: solid darkgray;
  text-transform: uppercase;
  border-radius: 4px;
  font-weight: bold;
  font-size: revert;
}

.modal_image {
  display: block;
  margin-left: auto;
  margin-right: auto;
  height: 40px;
  padding: 5px;
  margin-bottom: 5px;
}

form button {
  float: right;
}

.gallery_image {
  width: 100%;
  border-radius: 0;
  position: relative;
  height: 200px;
  object-fit: cover;

}
